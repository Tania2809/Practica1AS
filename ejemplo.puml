@startuml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml


!define FONTAWESOME6 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/font-awesome-6
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/devicons

!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/devicons2
!define MATERIAL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/material


!include FONTAWESOME6/users.puml
!include FONTAWESOME6/school.puml
!include FONTAWESOME6/certificate.puml
!include FONTAWESOME6/android.puml
!include FONTAWESOME6/cube.puml


!include FONTAWESOME6/windows.puml
!include DEVICONS/html5.puml
!include DEVICONS/python.puml
!include DEVICONS/mysql.puml
!include DEVICONS2/flask_original.puml

!include MATERIAL/web.puml
!include MATERIAL/person.puml
!include DEVICONS2/angular.puml

LAYOUT_WITH_LEGEND()

Enterprise_Boundary(c1, "Contexto") {
    System(app, "Sistema web de agenda de eventos", "Pagina web para agendar eventos.", $sprite="web")


    System(app2, "Usuario", "Usuario que interactua con el sistema web", $sprite="person")


    System_Boundary(c2, "Contenedores") {
        ContainerDb(bd, "Base de Datos", "MySQL", "Registros de eventos, categorias, clientes, lugares", $sprite="mysql")
        Container(api, "API", "Python", "Aplicación Web CRUD de agenda de eventos.", $sprite="python")


        Container_Boundary(c3, "Componente") {
            Component(Flask, "app.py", "Flask", "Rutas/Métodos donde se ejecutan la funciones CRUD", $sprite="flask_original")
            

        }


        Container(html, "Front-end de la pagina", "HTML5", "Formulario para llenar el CRUD", $sprite="html5")
        Container(angular, "Angular", "app.js", "Framework principal donde se ejecutan las rutas", $sprite="angular")
        Container(pusher, "Pusher", "", "Se encarga de emitir eventos en tiempo real", $sprite="cube")
        

       
    }
}


BiRel_L(api, bd, "", "")

Rel_R(app2, app, "", "Interaccion del usuario con la pagina web")
Rel_R(app, c2, "", "Interaccion con la base de datos")
Rel_R(angular, html, "", "Angular envia y recibe datos")
Rel_L(html, angular, "", "Comunicacion entre html y angular")
BiRel_R(angular, api, "", "Angular recibe datos de api y le devuelve datos a angular")
BiRel_R(pusher, c3, "", "Angular recibe datos de api y le devuelve datos a angular")
Rel_R(api, c3, "", "Angular envia y recibe datos")


@enduml
