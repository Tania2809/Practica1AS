@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

' === Íconos ===
!define FONTAWESOME6 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/font-awesome-6
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/devicons
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/devicons2
!define MATERIAL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons/material

!include FONTAWESOME6/users.puml
!include FONTAWESOME6/school.puml
!include FONTAWESOME6/certificate.puml
!include FONTAWESOME6/android.puml
!include FONTAWESOME6/cube.puml
!include FONTAWESOME6/windows.puml
!include DEVICONS/html5.puml
!include DEVICONS/python.puml
!include DEVICONS/mysql.puml
!include DEVICONS2/flask_original.puml
!include MATERIAL/web.puml
!include MATERIAL/person.puml
!include DEVICONS2/angular.puml

LAYOUT_LEFT_RIGHT()
LAYOUT_WITH_LEGEND()

' === Nivel 1: Usuario y Sistema ===
Person(user, "Usuario", "El usuario interactúa con la página web.", $sprite="person")
System_Boundary(b1, "Sistema Web Bitácora para Diálisis") {
  System(app, "Bitácora Digital", "Página web encargada de guardar, agregar y mostrar los datos organizados para un paciente en diálisis.", $sprite="web")

  ' === Nivel 2: Contenedores ===
  Container_Boundary(b2, "Contenedores Principales") {
      Container(frontend, "Front-end", "HTML5", "Formulario para llenar el CRUD: Datos del Paciente, Datos Médicos y Registro de Diálisis.", $sprite="html5")
      Container(angular, "Angular", "app.js", "Maneja rutas y comunicación con API para Buscar, Modificar y Agregar registros.", $sprite="angular")
      Container(api, "API Backend", "Python", "Aplicación web CRUD con funciones para Buscar, Agregar, Modificar y Eliminar.", $sprite="python")
      ContainerDb(db, "Base de Datos", "MySQL", "Almacena tablas: Bitácora, Datos Paciente, Datos Médicos, Registro de Diálisis, Usuarios.", $sprite="mysql")

      ' === Nivel 3: Componentes del Backend ===
      Container_Boundary(b3, "Componente Principal") {
          Component(flask, "app.py", "Flask", "Gestiona las rutas de los apartados CRUD, conectando con Angular y la base de datos.", $sprite="flask_original")
      }
  }
}

' === Relaciones entre entidades ===
Rel(user, app, "Interactúa con", "HTTPS")
Rel(app, frontend, "Envía formularios y muestra datos", "HTML / JS")
BiRel(angular, api, "Envía y recibe datos", "REST / JSON")
Rel(api, db, "Consulta y almacena datos", "SQL")
Rel(api, flask, "Gestiona rutas y peticiones", "Flask Framework")
BiRel(frontend, angular, "Comunicación dinámica", "JS / DOM")

' === Estilos Visuales ===
UpdateElementStyle(user, $bgColor="#d3f8e2", $fontColor="#000000", $borderColor="#3aa17e")
UpdateElementStyle(app, $bgColor="#b9fbc0", $fontColor="#000000", $borderColor="#3aa17e")
UpdateElementStyle(frontend, $bgColor="#ffd6a5", $fontColor="#000000", $borderColor="#ffb347")
UpdateElementStyle(angular, $bgColor="#f9c74f", $fontColor="#000000", $borderColor="#f9844a")
UpdateElementStyle(api, $bgColor="#90be6d", $fontColor="#000000", $borderColor="#43aa8b")
UpdateElementStyle(db, $bgColor="#caffbf", $fontColor="#000000", $borderColor="#57cc99")
UpdateElementStyle(flask, $bgColor="#9bf6ff", $fontColor="#000000", $borderColor="#00b4d8")

SHOW_LEGEND()
@enduml
